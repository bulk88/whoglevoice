async function handleRequest(e){let t=new URL(e.url).searchParams.get("apiurl");var n=e.headers.get("Origin");e=new Request(t,e),t=new URL(t);let s=e.headers;s.set("Origin",t.origin),s.set("Referer",t.origin),s.set("Host",t.host);let o=await fetch(e);return o=new Response(o.body,o),s=o.headers,"application/json+protobuf; charset=UTF-8"==s.get("Content-Type")&&s.set("Content-Type","application/json; charset=UTF-8"),s.delete("Content-Security-Policy"),s.delete("X-Content-Type-Options"),s.delete("X-Frame-Options"),s.delete("X-XSS-Protection"),s.delete("Pragma"),s.set("Access-Control-Allow-Origin",n),s.set("Access-Control-Allow-Credentials","true"),s.append("Vary","Origin"),"POST"==e.method&&(s.delete("Cache-Control"),s.delete("Expires"),s.delete("Vary")),o}function handleOptions(t){if(null!==(t=t.headers).get("Origin")&&null!==t.get("Access-Control-Request-Method")&&null!==t.get("Access-Control-Request-Headers")){var n=e;return n["Access-Control-Allow-Origin"]=t.get("Origin"),new Response(null,{headers:n})}return new Response(null,{headers:{Allow:"GET, HEAD, POST, OPTIONS"}})}async function HandleStatic(e,t){e.hostname="wvoice.us.to";let n=await fetch(e.toString(),t);return n=new Response(n.body,n),n.headers.set("Cache-Control","public, max-age=3600"),n}addEventListener("fetch",async e=>{const n=e.request,s=new URL(n.url);s.pathname.startsWith(t)?"OPTIONS"===n.method?e.respondWith(handleOptions(n)):"GET"===n.method||"HEAD"===n.method||"POST"===n.method?e.respondWith(handleRequest(n)):e.respondWith(async()=>new Response(null,{status:405,statusText:"Method Not Allowed"})):e.respondWith(HandleStatic(s,n))});const e={"Access-Control-Allow-Methods":"GET,HEAD,POST,OPTIONS","Access-Control-Allow-Headers":"authorization,content-type","Access-Control-Allow-Credentials":"true","Access-Control-Max-Age":3600,Vary:"Origin"},t="/corsproxy/";